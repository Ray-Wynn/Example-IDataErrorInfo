<Window x:Class="Example_IDataErrorInfo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Example_IDataErrorInfo"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:DataProducts}"
        Title="IDataErrorInfo" SizeToContent="WidthAndHeight">

    <!-- Code derived from https://kmatyaszek.github.io/wpf%20validation/2019/03/06/wpf-validation-using-idataerrorinfo.html -->
    <Window.Resources>
        <!-- TextBox Validation Style
                Tooltip single error reporting -->
        <Style x:Key="TextBoxValidationError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid.RowValidationErrorTemplate
                Display first error in row validation error in ToolTip.
                In row containing validation display in RowHeaderwith a yellow exclamation mark within a red circle. -->
        <ControlTemplate x:Key="RowValidationError">
            <!-- Tooltip single error reported -->
            <Grid Margin="0,-2,0,-2" ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)/ErrorContent}">
                <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}" />
                <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="Yellow" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
        </ControlTemplate>

        <!-- DataGrid.RowDetailsTemplate
                Display validation error in RowDetails when row is selected. -->
        <DataTemplate x:Key="ValidationError">
            <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)/ErrorContent}" 
                       Foreground="Red" Padding="4,0,4,2"/>
        </DataTemplate>
    </Window.Resources>
    
    <Grid Margin="4" Validation.Error="Validation_Error">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Text="Example IDataErrorInfo" FontWeight="Bold" HorizontalAlignment="Center"/>
        <!-- Products -->        
        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Text="Products" FontWeight="Bold" HorizontalAlignment="Center"/>
        <DataGrid Name="DataGridProducts" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" AutoGenerateColumns="False" CanUserAddRows="True" 
                  ItemsSource="{Binding}" 
                  RowValidationErrorTemplate="{StaticResource RowValidationError}"
                  RowDetailsTemplate="{StaticResource ValidationError}">
            <DataGrid.Columns>
                <!-- Product -->
                <DataGridTemplateColumn x:Name="NameColumn" Header="Product" MinWidth="100" Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=Product, UpdateSourceTrigger=PropertyChanged, 
                                     ValidatesOnDataErrors=True, NotifyOnValidationError=True, 
                                     NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" 
                                     SourceUpdated="TextBox_SourceUpdated"
                                     TargetUpdated="TextBox_TargetUpdated"
                                     Style="{StaticResource TextBoxValidationError}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Stock -->
                <DataGridTemplateColumn  Header="Stock" MinWidth="100" Width="auto">
                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate>
                            <TextBox Text="{Binding Path=Stock, UpdateSourceTrigger=PropertyChanged, 
                                     ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True,
                                     NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" 
                                     SourceUpdated="TextBox_SourceUpdated"
                                     TargetUpdated="TextBox_TargetUpdated"
                                     Style="{StaticResource TextBoxValidationError}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- TextBox implementations -->
        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Text="Product Selection" FontWeight="Bold" HorizontalAlignment="Center"/>
        <!-- Product -->
        <TextBlock Grid.Column="0" Grid.Row="4" Text="Product" FontWeight="Bold" HorizontalAlignment="Right" Margin="0,0,4,0"/>
        <TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="4" 
                 Style="{StaticResource TextBoxValidationError}" 
                 Text="{Binding SelectedItem.Product, ElementName=DataGridProducts, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
        <!-- Stock -->
        <TextBlock Grid.Column="0" Grid.Row="5" Text="Stock" FontWeight="Bold" HorizontalAlignment="Right" Margin="0,0,4,0"/>
        <TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="5" 
                 Style="{StaticResource TextBoxValidationError}"
                 Text="{Binding SelectedItem.Stock, ElementName=DataGridProducts, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}"/>
        <!-- ValidationError -->
        <TextBlock Grid.Column="0" Grid.Row="6" Text="Validation.Error event" FontWeight="Bold" HorizontalAlignment="Right" Margin="0,0,4,0"/>
        <!-- ValidationError -->
        <TextBlock Grid.Column="0" Grid.Row="6" Text="Validation.Error event" FontWeight="Bold" HorizontalAlignment="Right" Margin="0,0,4,0"/>
        <ListBox x:Name="ValidationErrorListBox" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="6" Foreground="Blue" />
        <!-- Source Update -->
        <TextBlock Grid.Column="0" Grid.Row="7" Text="SourceUpdated" FontWeight="Bold" HorizontalAlignment="Right" Margin="0,0,4,0" ToolTip="Only listening to DataGrid column events!"/>
        <TextBlock x:Name="SourceUpdatedTextBlock" Grid.Column="1" Grid.Row="7" Foreground="Violet" ToolTip="Only listening to DataGrid column events!"/>
        <!-- Target Update -->
        <TextBlock Grid.Column="0" Grid.Row="8" Text="TargetUpdated" FontWeight="Bold" HorizontalAlignment="Right" Margin="0,0,4,0" ToolTip="Only listening to DataGrid column events!"/>
        <TextBlock x:Name="TargetUpdatedTextBlock" Grid.Column="1" Grid.Row="8" Foreground="Violet" ToolTip="Only listening to DataGrid column events!"/>

        <!-- Provide a raw DataGrid view of the data -->
        <TextBlock Grid.Column="2" Grid.Row="1" Text="Data Raw View" FontWeight="Bold" HorizontalAlignment="Center" />
        <DataGrid x:Name="RawViewDataGrid" Grid.Column="2" Grid.Row="2" ItemsSource="{Binding}"/>
                
    </Grid>
</Window>
